<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">

<beans>
	<bean id="gradebookPropertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath*:/hibernate.properties</value>
			</list>
		</property>
	</bean>

	<bean id="gradebookDataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName"><value>${hibernate.connection.driver_class}</value></property>
		<property name="url"><value>${hibernate.connection.url}</value></property>
		<property name="username"><value>${hibernate.connection.username}</value></property>
		<property name="password"><value>${hibernate.connection.password}</value></property>
	</bean>

	<bean id="gradebookSessionFactory" name="sectionsSessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource"><ref bean="gradebookDataSource"/></property>

	<property name="mappingLocations">
		<value>classpath*:org/sakaiproject/**/*.hbm.xml</value>
	</property>

	<!--
	  This works, so long as you can keep the classpath clean.
		<property name="mappingLocations">
			<value>classpath*:org/sakaiproject/**/*.hbm.xml</value>
		</property>
	-->

	<!--
	  This doesn't work, because it can't look into JARs.
		<property name="mappingDirectoryLocations">
			<list>
				<value>classpath:org/sakaiproject/tool/gradebook</value>
			</list>
		</property>
	-->
	<!--
	  This doesn't work, only because the standalone facade mappings aren't in a JAR. If they were, it would:
		<property name="mappingJarLocations">
			<list>
				<value>WEB-INF/lib/sakai-gradebook-component-data-2.0.0.jar</value>
			</list>
		</property>
	-->

	<!--
	  This works, so long as the mappingLocation directories are limited.
		<property name="mappingLocations">
		    <value>classpath*:org/sakaiproject/tool/gradebook/**/*.hbm.xml</value>
		</property>
	-->

	<!--
	  This doesn't work, because lists aren't allowed in Spring mappingLocations.
	  TODO Move to this approach when Spring closes SPR-1297.
		<property name="mappingLocations">
			<list>
			    <value>classpath*:org/sakaiproject/tool/gradebook/*.hbm.xml</value>
			    <value>classpath*:org/sakaiproject/tool/gradebook/facades/standalone/*.hbm.xml</value>
			</list>
		</property>
	-->

	<!--
	  This works:
		<property name="mappingResources">
			<list>
				<value>org/sakaiproject/tool/gradebook/Gradebook.hbm.xml</value>
				<value>org/sakaiproject/tool/gradebook/GradableObject.hbm.xml</value>
				<value>org/sakaiproject/tool/gradebook/GradeRecord.hbm.xml</value>
				<value>org/sakaiproject/tool/gradebook/GradingEvent.hbm.xml</value>
				<value>org/sakaiproject/tool/gradebook/GradeMapping.hbm.xml</value>
				<value>org/sakaiproject/component/section/LearningContextImpl.hbm.xml</value>
				<value>org/sakaiproject/component/section/ParticipationRecordImpl.hbm.xml</value>
				<value>org/sakaiproject/component/section/UserImpl.hbm.xml</value>
			</list>
		</property>
	-->

		<property name="hibernateProperties">
		  <props>
		    <prop key="hibernate.dialect">${hibernate.dialect}</prop>
		    <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
		    <prop key="hibernate.cache.provider_class">${hibernate.cache.provider_class}</prop>
		    <prop key="hibernate.query.substitutions">true 1, false 0</prop>
		    <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
		  </props>
		</property>
	</bean>

</beans>
