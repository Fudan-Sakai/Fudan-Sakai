<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <artifactId>osp-jsf</artifactId>
    <groupId>org.sakaiproject.osp</groupId>
    <version>2.8.1</version>
    <relativePath>../pom.xml</relativePath>
  </parent>
  <name>OSP JSF Widgets - Example</name>
  <groupId>org.sakaiproject.osp</groupId>
  <artifactId>osp-jsf-example</artifactId>
  <organization>
    <name>University of Michigan</name>
    <url>http://sakaiproject.org/</url>
  </organization>
  <inceptionYear>2003</inceptionYear>
  <description>
		This project contains examples of Sakai JSF in action.
	</description>
  <packaging>war</packaging>
  <dependencies>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.sakaiproject.kernel</groupId>
      <artifactId>sakai-kernel-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.sakaiproject.kernel</groupId>
      <artifactId>sakai-component-manager</artifactId>
    </dependency>
<!-- this is required for any Sakai JSF tool -->
    <dependency>
      <groupId>org.sakaiproject.jsf</groupId>
      <artifactId>jsf-tool</artifactId>
    </dependency>
<!-- these (jsf-app and util-web) are options to get full Sakai integration -->
    <dependency>
      <groupId>org.sakaiproject.jsf</groupId>
      <artifactId>jsf-app</artifactId>
    </dependency>
<!-- MyFaces JSF dependencies -->
<!-- 
      <dependency>
			<groupId>org.apache.myfaces.core</groupId>
			<artifactId>myfaces</artifactId>
			<version>1.0.9</version>
			<url>http://myfaces.apache.org/</url>
			<properties>
				<war.bundle>true</war.bundle>
			</properties>
		</dependency>
		-->
<!-- Sakai tag library -->
<!-- OSP tag library -->
    <dependency>
      <groupId>org.sakaiproject.osp</groupId>
      <artifactId>osp-depend-jsf-widgets-sun</artifactId>
      <type>pom</type>
    </dependency>
<!-- Adaptor to use tag library with Sun's RI -->
    <dependency>
      <groupId>org.sakaiproject.jsf</groupId>
      <artifactId>jsf-widgets-sun-depend</artifactId>
      <type>pom</type>
    </dependency>
    <dependency>
      <groupId>commons-digester</groupId>
      <artifactId>commons-digester</artifactId>
      <version>1.6</version>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>jstl</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-beanutils</groupId>
      <artifactId>commons-beanutils</artifactId>
      <version>1.7.0</version>
    </dependency>
<!-- Provided by the servlet container by default -->
    <dependency>
      <groupId>commons-el</groupId>
      <artifactId>commons-el</artifactId>
      <version>1.0</version>
    </dependency>
<!--  The below JSF-related depencencies should only be bundled in the webapp if it
	          is being used OUTSIDE of Sakai.  When deployed inside of Sakai, 
	          or using the Sakai maven plugin, these jars are deployed by Sakai automatically. 
		-->
<!-- Apache Commons file upload used by inputFileUpload tag and associated filter -->
    <dependency>
      <groupId>commons-fileupload</groupId>
      <artifactId>commons-fileupload</artifactId>
      <version>1.1.1</version>
<!--url: http://jakarta.apache.org/commons/fileupload/ -->
    </dependency>
    <dependency>
      <groupId>commons-collections</groupId>
      <artifactId>commons-collections</artifactId>
      <version>3.1</version>
    </dependency>
    <dependency>
      <groupId>commons-logging</groupId>
      <artifactId>commons-logging</artifactId>
   </dependency>
    <dependency>
      <groupId>xml-apis</groupId>
      <artifactId>xml-apis</artifactId>
      <version>2.0.2</version>
    </dependency>
  </dependencies>
  <build>
    <resources>
      <resource>
        <directory>${basedir}/src/bundle</directory>
        <includes>
          <include>**/*</include>
        </includes>
      </resource>
      <resource>
        <directory>${basedir}/webapp</directory>
        <includes>
          <include>**/*</include>
        </includes>
      </resource>
    </resources>
  </build>
</project>
