<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">


<beans default-lazy-init="true">

   <bean id="org.sakaiproject.metaobj.utils.mvc.intf.VelocityEngineFactory" 
      class="org.sakaiproject.metaobj.utils.mvc.impl.LocalVelocityConfigurer">
      <property name="resourceLoaderPath"><value>WEB-INF/templates/</value></property>
      <property name="velocityProperties">
         <props>
            <prop key="velocimacro.permissions.allowInline">true</prop>
            <prop key="velocimacro.permissions.allow.inline.local.scope">true</prop>
            <prop key="velocimacro.library.autoreload">true</prop>
         </props>
      </property>
   </bean>

   <bean id="mimeTypeCustomEditor" class="org.theospi.portfolio.shared.model.impl.MimeTypeCustomEditor">
   </bean>

   <bean id="org.sakaiproject.metaobj.utils.mvc.intf.ListScrollIndexer"
      class="org.sakaiproject.metaobj.utils.mvc.impl.ListScrollIndexerImpl">
      <property name="perPage"><value>10</value></property>
   </bean>

   <bean id="org.springframework.web.servlet.HandlerInterceptor.SakaiStyleSheetInterceptor"
      class="org.sakaiproject.metaobj.shared.control.SakaiStyleSheetInterceptor">
      <property name="worksiteManager">
         <ref bean="org.sakaiproject.metaobj.worksite.mgt.WorksiteManager"/>
      </property>
   </bean>
   
	<!--
	  - This bean provides explicit View mappings in a resource bundle instead of the
	  - default InternalResourceViewResolver. It fetches the view mappings from
	  - localized "views_xx" classpath files, i.e. "/WEB-INF/classes/views.properties"
	  - or "/WEB-INF/classes/views_de.properties".
	  -
	  - Symbolic view names returned by Controllers will be resolved by this bean
	  - using the respective properties file, which defines arbitrary mappings between
	  - view names and resources.
	  -->
	<bean id="viewResolver" class="org.springframework.web.servlet.view.ResourceBundleViewResolver">
		<property name="basename"><value>matrix-views</value></property>
	</bean>

	<!--
	  - This bean resolves specific types of exception to corresponding error views.
		- The default behaviour of DispatcherServlet is to propagate all exceptions to the
		- servlet container: This will happen here with all other types of exception.
		-->
	<bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop key="org.sakaiproject.metaobj.security.AuthorizationFailedException">authzFailed</prop>
			</props>
		</property>
	</bean>

   <bean id="org.sakaiproject.metaobj.shared.control.servlet.RequestSetupFilter"
         class="org.sakaiproject.metaobj.shared.control.servlet.SakaiComponentFilter">
      <property name="multipartResolver">
         <ref bean="multipartResolver"/>
      </property>
   </bean>

	<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basename"><value>org.theospi.portfolio.matrix.bundle.Messages</value></property>
	</bean>

   <bean id="localeResolver" class="org.sakaiproject.spring.util.SakaiLocaleResolver">
   </bean>

   <!-- This is used by the template view to add common beans to the model -->
   <bean id="commonModelController" class="org.sakaiproject.metaobj.utils.mvc.impl.CommonModelControllerImpl" >
   </bean>

   <bean id="urlMapping" class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
       <property name="lazyInitHandlers">
          <value>true</value>
       </property>
       <property name="interceptors">
           <list>
              <!-- check for session timeout, give pretty error page is timed out -->
              <ref bean="org.sakaiproject.metaobj.shared.control.CheckForTimeout"/>
              <!-- causes Hibernate Session to surround Request-->
              <ref bean="org.springframework.web.servlet.HandlerInterceptor.openSessionInView"/>
              <!-- puts 'sakai_skin' into request as an attribute -->
              <ref bean="org.springframework.web.servlet.HandlerInterceptor.SakaiStyleSheetInterceptor"/>
           </list>
       </property>
       <property name="mappings">
           <props>
              <prop key="/listScaffolding.osp">listScaffoldingController</prop>
              <prop key="/viewMatrix.osp">viewMatrixController</prop>
              <prop key="/viewCell.osp">cellController</prop>
              <prop key="/selectCellArtifacts.osp">cellArtifactController</prop>
              <prop key="/resetMatrix.osp">MatrixResetController</prop>
              <prop key="/submitCellConfirmation.osp">submitCellConfirmationController</prop>
              <prop key="/viewAssign.osp">viewAssignmentController</prop>

              <prop key="/attachToCell.osp">attachCellController</prop>
              <prop key="/manageCellStatus.osp">manageCellStatusController</prop>
              <prop key="/cellFormPicker.osp">cellFormPickerController</prop>
              <prop key="/assignRedirector.osp">assignRedirectorController</prop>
              <prop key="/styleRedirector.osp">styleRedirectorController</prop>
              <prop key="/scaffoldingStyleRedirector.osp">scaffoldingStyleRedirectorController</prop>
              <prop key="/formDelete.osp">formDeleteController</prop>
              <prop key="/resourceDelete.osp">resourceDeleteController</prop>

              <!--  Scaffolding -->
              <prop key="/importScaffolding.osp">importScaffoldingController</prop>
              <prop key="/addScaffolding.osp">addScaffoldingController</prop>
              <prop key="/addLevel.osp">addLevelController</prop>
              <prop key="/editLevel.osp">addLevelController</prop>
              <prop key="/deleteLevel.osp">deleteLevelController</prop>
              <prop key="/moveLevel.osp">moveLevelController</prop>
              <prop key="/addCriterion.osp">addCriterionController</prop>
              <prop key="/editCriterion.osp">addCriterionController</prop>
              <prop key="/deleteCriterion.osp">deleteCriterionController</prop>
              <prop key="/moveCriterion.osp">moveCriterionController</prop>
              <prop key="/viewScaffolding.osp">viewScaffoldingController</prop>
              
              <prop key="/scaffoldingCellInfo.osp">scaffoldingCellInfoController</prop>
              <prop key="/listPageActivities.osp">listPageActivitiesController</prop>
              
              <!-- pretty is an alternate matrix editing view -->
              <prop key="/prettyScaffolding.osp">prettyScaffoldingController</prop>
              
              <prop key="/editScaffoldingCell.osp">editScaffoldingCellController</prop>
              <prop key="/deleteScaffolding.osp">deleteScaffoldingController</prop>
              <prop key="/deleteScaffoldingConfirmation.osp">deleteScaffoldingConfirmationController</prop>
              <prop key="/inviteFeedbackConfirm.osp">inviteFeedbackConfirmationController</prop>

              <prop key="/removeLevCrit.osp">removeLevCritConfirmationController</prop>
              <prop key="/removeExpectation.osp">removeExpectationConfirmationController</prop> 
            <prop key="/previewScaffolding.osp">previewScaffoldingController</prop>
            <prop key="/publishScaffoldingConfirmation.osp">publishScaffoldingConfirmationController</prop>
            <prop key="/editScaffoldingConfirm.osp">editScaffoldingConfirmController</prop>
            <prop key="/editScaffoldingCellConfirm.osp">editScaffoldingCellConfirmController</prop>
            <prop key="/reviewHelper.osp">reviewHelperController</prop>
            <prop key="/feedbackHelper.osp">feedbackHelperController</prop>
            <prop key="/viewCellInformation.osp">viewCellInformationController</prop>           
            <prop key="/reviewPostProcessor.osp">reviewPostProcessor</prop>
            <prop key="/exposedScaffolding.osp">exposedScaffoldingController</prop>

              <!--  Reviewer Stuff -->
              <prop key="/listEvaluationItems.osp">listEvaluationItemsController</prop>
              
              <!-- helpers -->
              <prop key="/wizardPage.osp">wizardPageController</prop>
              <prop key="/wizardPageDefinition.osp">wizardPageDefinitionController</prop>
              <prop key="/sequentialWizardPage.osp">sequentialWizardPageController</prop>
           </props>
       </property>
   </bean>

   <!-- check for session timeout, give pretty error page is timed out -->
    <bean id="org.sakaiproject.metaobj.shared.control.CheckForTimeout"
          class="org.sakaiproject.metaobj.shared.control.CheckForTimeout">
      <property name="authenticationManager"><ref bean="authManager"/></property>
      <property name="timeoutUrl"><value>${system.baseUrl}/timeout.html</value></property>
      <!-- do not apply interceptor to these servlet paths -->
      <property name="ignoreList">
         <list>
            <value>/title.osp</value>
         </list>
      </property>
    </bean>

   <bean id="refCustomEditor" class="org.theospi.utils.mvc.impl.RefCustomEditor">

   </bean>

   <bean id="idCustomEditor" class="org.sakaiproject.metaobj.shared.mgt.IdCustomEditor">
       <property name="idManager"><ref bean="idManager"/></property>
   </bean>

   <bean id="idListCustomEditor" class="org.sakaiproject.metaobj.shared.mgt.IdListCustomEditor">
       <property name="idManager"><ref bean="idManager"/></property>
   </bean>

   <!--bean id="fieldValueWrapperFactory" class="org.sakaiproject.metaobj.shared.mgt.factories.FieldValueWrapperFactory" >
      <property name="wrappedClassNamesMap">
         <props>
            <prop key="java.util.Date">org.sakaiproject.metaobj.shared.model.DateBean</prop>
         </props>
      </property>
   </bean-->

   <!-- This is used by the template view as default settings -->
   <bean id="defaultTemplateDef" class="org.sakaiproject.metaobj.utils.mvc.impl.SimpleBeanWrapper" >
      <property name="wrappedBean">
         <props>
<!--
            <prop key="_rightMenu">/WEB-INF/jsp/rightMenu.jsp</prop>
            <prop key="_leftMenu">/WEB-INF/jsp/leftMenu.jsp</prop>
            <prop key="_header">/WEB-INF/jsp/header.jsp</prop>
            <prop key="_footer">/WEB-INF/jsp/footer.jsp</prop>
-->
            <prop key="_template">/WEB-INF/jsp/template.jsp</prop>
         </props>
      </property>
   </bean>

</beans>
