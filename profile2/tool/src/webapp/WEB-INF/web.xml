<?xml version="1.0" encoding="ISO-8859-1"?>
<web-app xmlns="http://java.sun.com/xml/ns/j2ee"
	 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	 xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd"
	 version="2.4">

	<display-name>profile2</display-name>

	<!-- Sakai request filter -->
	<filter>
		<filter-name>sakai.request</filter-name>
		<filter-class>org.sakaiproject.util.RequestFilter</filter-class>
		<!-- this must be set to false so that file uploads are NOT parsed by Sakai's RequestFilter
			this also means that the wicket app needs to check the various sakai.properties that set upload size etc,
			 rather than relying on the Sakai RequestFilter to do it.
		 -->
		<init-param>
			<param-name>upload.enabled</param-name>
			<param-value>false</param-value>
      	</init-param>
	</filter>
	<filter-mapping>
		<filter-name>sakai.request</filter-name>
		<servlet-name>sakai.profile2</servlet-name>
		<dispatcher>REQUEST</dispatcher>
		<dispatcher>FORWARD</dispatcher>
		<dispatcher>INCLUDE</dispatcher>
	</filter-mapping>
	
	<!-- 
	<filter>
		<filter-name>sakai.profile2</filter-name>
 		<filter-class>org.apache.wicket.protocol.http.WicketFilter</filter-class>
		<init-param>
			<param-name>applicationClassName</param-name>
			<param-value>uk.ac.lancs.e_science.profile2.tool.ProfileApplication</param-value>
 		</init-param>
 	</filter>
 	-->

	<!-- 
 	<filter-mapping>
  		<filter-name>sakai.profile2</filter-name>
		<url-pattern>/sakai-profile2/*</url-pattern>
 	</filter-mapping>
 	-->
 	
 	<!-- Change the 'applicationBean' param value to the name of your application as
  		listed under the applicationContext.xml -->
  	<servlet>
	    <servlet-name>sakai.profile2</servlet-name>
	    <servlet-class>org.apache.wicket.protocol.http.WicketServlet</servlet-class>
	    
	    <init-param>
	      	<param-name>applicationFactoryClassName</param-name>
	      	<param-value>org.apache.wicket.spring.SpringWebApplicationFactory</param-value>
	    </init-param>
	    <init-param>
			<param-name>applicationBean</param-name>
			<param-value>profileApplication</param-value>
		</init-param>
  	</servlet>
 	
 	<!-- Wicket likes to have a url-pattern mapping even though Sakai doesn't use it. -->
	<servlet-mapping>
		<servlet-name>sakai.profile2</servlet-name>
		<url-pattern>/sakai-profile2/*</url-pattern>		
	</servlet-mapping>
 	
	<context-param>
        <param-name>wicket.configuration</param-name>
        <!-- <param-value>development</param-value>-->
        <param-value>deployment</param-value>
    </context-param>
	
	<!-- Sakai listeners -->
	<listener>
		<listener-class>org.sakaiproject.util.ToolListener</listener-class>
	</listener>
	<listener>
		<listener-class>org.sakaiproject.util.ContextLoaderListener</listener-class>
	</listener>
	
	<!-- Standard Spring listener for dependency injection. The Sakai one above replaces this in Sakai apps -->
	<!-- 
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	-->
</web-app>
