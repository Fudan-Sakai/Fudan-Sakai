import java.util.Date;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

import org.sakaiproject.tool.api.Session;
import org.sakaiproject.tool.cover.SessionManager;

/**
 * class to support Sakai Login headers sent in request as a string array
 */
public class SakaiSession {

 	private static final Log LOG = LogFactory.getLog("org.sakaiproject.axis.SakaiSession");

 	/**
	 * @deprecated see http://jira.sakaiproject.org/browse/SAK-18136
	 */
    public String checkSession(String id) {
    	
    	LOG.warn("SakaiSession.checkSession is deprecated and will be relocated in Sakai 2.8. See SAK-18136.");
		
    	LOG.debug("session id="+id);
        Session s = SessionManager.getSession(id);
        if (s == null)
        {
        	LOG.debug("no session established");
		return "Session Null";
        }
        else
        {
		String resp = "session: " + s.getId()
        		+ " user id: " + s.getUserId()
        		+ " user enterprise id: " + s.getUserEid()
        		+ " started: " + new Date(s.getCreationTime()).toLocaleString()
        		+ " accessed: " + new Date(s.getLastAccessedTime()).toLocaleString()
        		+ " inactive after: " + s.getMaxInactiveInterval();
        	LOG.debug(resp);
		return resp;
        }
    }

    /**
	 * @deprecated see http://jira.sakaiproject.org/browse/SAK-18136
	 */
    public String getSessionUser(String id) {
    	
    	LOG.warn("SakaiSession.getSessionUser is deprecated and will be relocated in Sakai 2.8. See SAK-18136.");

        Session s = SessionManager.getSession(id);
        if (s == null)
        {
		LOG.debug("getSessionUser session id="+id+" Has no user");
		return "";
        }
        else
        {
		LOG.debug("getSessionUser session id="+id+" eid="+s.getUserEid());
		return s.getUserEid();
        }
    }
}
